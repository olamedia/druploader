{"body":"\r\n\r\n\r\nDr(ag and drop )uploader is a jQuery plugin to enable drag&drop upload for any element on the page.\r\n\r\nWith one line:\r\n```javascript\r\n$(\".dropzone\").druploader();\r\n```\r\n\r\nCorresponding HTML code:\r\n```html\r\n<div class=\"dropzone\" drop-api=\"/upload-url\">\r\nCONTENT HERE, can include other drop zones\r\n</div>\r\n```\r\n\r\nHTML attribute drop-api is an URL for file upload.\r\n\r\nWith optional html attributes:\r\n```html\r\n<div class=\"dropzone\" drop-api=\"/upload-url\" \r\ndrop-reload=\"{jQuery selector}\" \r\ndrop-reload-api=\"{URL where to get content to replace drop-reload element}\">\r\nCONTENT HERE, can include other drop zones\r\n</div>\r\n```\r\n\r\nIf 'drop-reload' attribute is found, then 'drop-reload-api' URL will be used to load contents for element found by 'drop-reload' jQuery selector.\r\n\r\n### Backend\r\n\r\n* Read filename from header, X-File-Name\r\n* Read file contents from POST body\r\n* If success, return json object with field status = 0. Else return different status.\r\n\r\n\r\nPHP backend:\r\n```php\r\n<?php\r\nif (isset($_SERVER['HTTP_X_FILE_NAME'])){\r\n   $name = $_SERVER['HTTP_X_FILE_NAME'];\r\n   $tmpname = tempnam(sys_get_temp_dir(), 'upload_');\r\n   $stream = fopen('php://input', 'r');\r\n   file_put_contents($tmpname, $stream);\r\n   // From here $tmpname containg filename of temporary file. Now you can check mime type, size etc.\r\n```\r\n\r\n\"No errors during upload\" message:\r\n```php\r\n<?php\r\n$obj = new stdClass();\r\n$obj->status = 0;\r\necho json_encode($obj);\r\n```","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"jQuery drag&drop uploader","name":"Druploader","google":""}